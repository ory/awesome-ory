version: "3.7"

services:
  traefik:
    image: "traefik:v2.6"
    container_name: "traefik"
    networks:
      - intranet
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8080:80"
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  oathkeeper:
    image: oryd/oathkeeper:v0.38
    depends_on:
      - kratos
    command:
      serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
    restart: on-failure
    networks:
      - intranet
    volumes:
      - ./oathkeeper:/etc/config/oathkeeper
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oathkeeper.rule=Host(`oathkeeper`)"
      - "traefik.http.routers.oathkeeper.entrypoints=web"
      - "traefik.http.routers.oathkeeper.service=oathkeeper"
      - "traefik.http.services.oathkeeper.loadbalancer.server.port=4456"
      - "traefik.http.middlewares.oathkeeper.forwardauth.address=http://oathkeeper:4456/decisions"
      - "traefik.http.middlewares.oathkeeper.forwardauth.authResponseHeaders=X-User"

  hello:
    build:
      context: "hello"
    networks:
      - intranet
    labels:
      - "traefik.enable=true"
      # App settings
      - "traefik.http.routers.hello.rule=Path(`/hello`)"
      - "traefik.http.routers.hello.entrypoints=web"
      # Attach to the oathkeeper middleware defined in oathkeeper
      - "traefik.http.routers.hello.service=hello"
      - "traefik.http.services.hello.loadbalancer.server.port=8090"
      - "traefik.http.routers.hello.middlewares=oathkeeper@docker"

  postgres-kratos:
    image: postgres:9.6
    environment:
      - POSTGRES_USER=kratos
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=kratos
    networks:
      - intranet

  kratos-migrate:
    image: oryd/kratos:v0.8.0-alpha.3
    links:
      - postgres-kratos:postgres-kratos
    environment:
      - DSN=postgres://kratos:secret@postgres-kratos:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    networks:
      - intranet
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes

  kratos:
    image: oryd/kratos:v0.8.0-alpha.3
    links:
      - postgres-kratos:postgres-kratos
    environment:
      - DSN=postgres://kratos:secret@postgres-kratos:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    ports:
      - '4433:4433'
      - '4434:4434'
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
    networks:
      - intranet
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier

  kratos-selfservice-ui-node:
    image: oryd/kratos-selfservice-ui-node:latest
    environment:
      - KRATOS_PUBLIC_URL=http://kratos:4433/
      - KRATOS_BROWSER_URL=http://127.0.0.1:4433/
    networks:
      - intranet
    ports:
      - "4455:3000"
    restart: on-failure
    labels:
      - "traefik.enable=true"
      # App settings
      - "traefik.http.routers.uinode.rule=Path('/login')"
      - "traefik.http.routers.uinode.entrypoints=web"
      # Attach to the oathkeeper middleware defined in oathkeeper
      - "traefik.http.routers.uinode.service=uinode"
      - "traefik.http.services.uinode.loadbalancer.server.port=3000"
      - "traefik.http.routers.uinode.middlewares=oathkeeper@docker"



  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'
    networks:
      - intranet


networks:
  intranet:
